<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ProductionHierarchyHelper"
					xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					>

	<sys:Double x:Key="DefaultSize">5</sys:Double>
	<win:Thickness x:Key="MarginSize" Bottom="{StaticResource DefaultSize}" Left="{StaticResource DefaultSize}" Top="{StaticResource DefaultSize}" Right="{StaticResource DefaultSize}" />

	<sys:Double x:Key="DisabledOpacity">.6</sys:Double>

	<Color x:Key="BackgroundColor" R="0" G="0" B="0" A="255" />
	<Color x:Key="MediumBackgroundColor" R="33" G="33" B="33" A="255" />
	<Color x:Key="LightBackgroundColor" R="66" G="66" B="66" A="255" />
	<Color x:Key="ForegroundColor" R="128" G="128" B="200" A="255" />


	<SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
	<SolidColorBrush x:Key="MediumBackgroundBrush" Color="{StaticResource MediumBackgroundColor}" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="{StaticResource LightBackgroundColor}" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}" />

	<Style x:Key="WindowStyle" TargetType="Window">
		<Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
		<Setter Property="Foreground" Value="Aqua" />
	</Style>
	<Style x:Key="BaseStyle" TargetType="FrameworkElement">
		<Setter Property="Margin" Value="{StaticResource MarginSize}" />
	</Style>
	<Style TargetType="Grid">
		<Setter Property="Background" Value="Transparent" />
	</Style>
	<Style TargetType="ListBox" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
	</Style>
	<Style TargetType="Button" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Padding" Value="{StaticResource MarginSize}" />
		<Setter Property="MinWidth" Value="70" />
		<Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource LightBackgroundBrush}"/>
							<!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>-->
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.MouseOver.Border}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Pressed.Border}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.6"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Border}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="TextBox" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Padding" Value="{StaticResource MarginSize}" />
		<Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
	</Style>
	<Style TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
	</Style>
	<Style TargetType="TabItem" >
		<Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabItem">
					<Grid x:Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource LightBackgroundColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Border"
																	   Storyboard.TargetProperty="Opacity">
											<EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource DisabledOpacity}" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border"
                  Margin="0,0,-4,0"
                  BorderThickness="1,1,1,1"
                  CornerRadius="2,2,0,0" BorderBrush="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" >
							<ContentPresenter x:Name="ContentSite"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header"
                              Margin="12,2,12,2"
                              RecognizesAccessKey="True" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected"
                   Value="True">
							<Setter Property="Panel.ZIndex"
                    Value="100" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="TabControl" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="Padding" Value="20" />
	</Style>
	<Style TargetType="Menu">
		<Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}" />
		<Setter Property="Padding" Value="{StaticResource MarginSize}" />
	</Style>
	<Style TargetType="GroupBox">
		<Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate >

					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="6" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="6" />
						</Grid.RowDefinitions>
						<Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4,4,4,4" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Panel.Background}" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3" />
						<Border Padding="3,1,3,0" Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Panel.ZIndex="1">
							<ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
								<ContentPresenter.Resources>
									<Style TargetType="TextBlock">
										<Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
										<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
										<Setter Property="Padding" Value="{StaticResource MarginSize}" />
									</Style>
								</ContentPresenter.Resources>
							</ContentPresenter>
						</Border>
						<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" />
						<Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="4,4,4,4" BorderBrush="Transparent" OpacityMask="{x:Null}" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3">
							<Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Border.BorderBrush}">
								<Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="Transparent" />
							</Border>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="ComboBox" BasedOn="{StaticResource BaseStyle}">
		<Style.Resources>
			<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="20" />
					</Grid.ColumnDefinitions>
					<VisualStateManager.VisualStateGroups>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="MouseOver">
								<Storyboard>
									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="Border">
										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource LightBackgroundColor}" />
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
							</VisualState>
							<VisualState x:Name="Pressed" />
							<VisualState x:Name="Disabled">
								<Storyboard>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity">
										<EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource DisabledOpacity}" />
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity">
										<EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource DisabledOpacity}" />
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</VisualState>
						</VisualStateGroup>
						<VisualStateGroup x:Name="CheckStates">
							<VisualState x:Name="Checked" />
							<VisualState x:Name="Unchecked" />
							<VisualState x:Name="Indeterminate" />
						</VisualStateGroup>
					</VisualStateManager.VisualStateGroups>
					<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" BorderBrush="{TemplateBinding Foreground}" Background="{StaticResource BackgroundBrush}" />
					<Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="{StaticResource MediumBackgroundBrush}" />
					<Path x:Name="Arrow" Fill="{TemplateBinding Foreground}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
				</Grid>
			</ControlTemplate>


			<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
				<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
			</ControlTemplate>
		</Style.Resources>

		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="MinWidth" Value="120" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="Opacity">
											<EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource DisabledOpacity}" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="EditStates">
								<VisualState x:Name="Editable">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Uneditable" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Foreground="{TemplateBinding Foreground}" Grid.Column="2" Focusable="false" ClickMode="Press"
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
						<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left" />
						<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left"
							VerticalAlignment="Bottom" Margin="3,3,3,5" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Foreground="{TemplateBinding Foreground}" />
						<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
							<Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource ForegroundBrush}" Background="{StaticResource MediumBackgroundBrush}" />
								<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="MenuItem">
		<Style.Resources>

			<!-- TopLevelHeader -->
			<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
				<Border x:Name="Border">
					<Grid>
						<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
						<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
							<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{TemplateBinding Background}">
								<Border.BorderBrush>
									<SolidColorBrush Color="{StaticResource ForegroundColor}" />
								</Border.BorderBrush>
								<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
							</Border>
						</Popup>
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsSuspendingPopupAnimation" Value="true">
						<Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
					</Trigger>
					<Trigger Property="IsHighlighted" Value="true">
						<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
						<Setter Property="Background" TargetName="Border" Value="{StaticResource LightBackgroundBrush}" />
					</Trigger>
					<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
						<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
						<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<!-- TopLevelItem -->
			<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
				<Border x:Name="Border">
					<Grid>
						<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsHighlighted" Value="true">
						<Setter Property="Background" TargetName="Border" Value="{StaticResource LightBackgroundBrush}" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<!-- SubmenuItem -->
			<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
				<Border x:Name="Border" BorderThickness="1">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
							<ColumnDefinition Width="13" />
						</Grid.ColumnDefinitions>
						<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
						<Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
							<Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" Stroke="{TemplateBinding Foreground}"  />
						</Border>
						<ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
						<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="ButtonBase.Command" Value="{x:Null}" />
					<Trigger Property="Icon" Value="{x:Null}">
						<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
					</Trigger>
					<Trigger Property="IsChecked" Value="true">
						<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
					</Trigger>
					<Trigger Property="IsCheckable" Value="true">
						<Setter TargetName="Check" Property="Visibility" Value="Visible" />
						<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
					</Trigger>
					<Trigger Property="IsHighlighted" Value="true">
						<Setter Property="Background" TargetName="Border" Value="{StaticResource LightBackgroundBrush}" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
				<Border x:Name="Border" BorderThickness="1">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
							<ColumnDefinition Width="13" />
						</Grid.ColumnDefinitions>
						<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
						<ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
						<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />
						<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{TemplateBinding Foreground}" />
						<Popup x:Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
							<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding Foreground}">
								<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
							</Border>
						</Popup>
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="Icon" Value="{x:Null}">
						<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
					</Trigger>
					<Trigger Property="IsHighlighted" Value="true">
						<Setter Property="Background" TargetName="Border" Value="{StaticResource LightBackgroundBrush}" />
					</Trigger>
					<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
						<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
						<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<!--Separator Style-->
			<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
				<Setter Property="Height" Value="1" />
				<Setter Property="Margin" Value="0,4,0,4" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Separator}">
							<Border BorderThickness="1" BorderBrush="{TemplateBinding Foreground}" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</Style.Resources>

		<Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
				<Setter Property="Grid.IsSharedSizeScope" Value="true" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>